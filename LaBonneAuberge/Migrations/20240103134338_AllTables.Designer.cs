// <auto-generated />
using LaBonneAuberge.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaBonneAuberge.Migrations
{
    [DbContext(typeof(LaBonneAubergeContext))]
    [Migration("20240103134338_AllTables")]
    partial class AllTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("LaBonneAuberge.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LaBonneAuberge.Models.FeedBackModel", b =>
                {
                    b.Property<int>("Id_FeedBack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email_FeedBack")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message_FeedBack")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Notation_FeedBack")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pseudo_FeedBack")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_FeedBack");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("LaBonneAuberge.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("LaBonneAuberge.Models.TeamList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Job")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TeamLists");
                });

            modelBuilder.Entity("LaBonneAuberge.Models.Menu", b =>
                {
                    b.HasOne("LaBonneAuberge.Models.Category", "Category")
                        .WithMany("Menus")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LaBonneAuberge.Models.Category", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
